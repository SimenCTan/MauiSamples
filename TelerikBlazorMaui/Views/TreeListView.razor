<TelerikTreeList Data="@Data"
    Height="500"
                  ItemsField="Items">
<TreeListColumns>
    <TreeListColumn Field="Id" Width="60px"/>
    <TreeListColumn Field="Name" Expandable=true Width="200px"/>
    <TreeListColumn Field="AgeInYears"/>
    <TreeListColumn Field="GraduateGrade"></TreeListColumn>
    <TreeListColumn Field="HireDate"></TreeListColumn>
</TreeListColumns>        
</TelerikTreeList>

<style>
    .k-grid-header .k-table-th.k-grid-header-sticky,
    .k-grid-header td.k-grid-header-sticky,
    .k-grid-header .k-table-td.k-grid-header-sticky,
    .k-grid-header .k-grid-header-sticky.k-sorted {
        color: #EBEBEB;
        background-color: #1F1D2B;
        border-right-color: rgba(0, 0, 0, 0.3);
        border-left-color: rgba(0, 0, 0, 0.3);
    }

    .k-master-row .k-grid-content-sticky {
        border-color: rgba(0, 0, 0, 0.3);
        border-top-color: #5E5E5E;
        background-color: #1F1D2B;
    }

    .k-master-row.k-table-alt-row .k-grid-content-sticky,
    .k-master-row.k-table-alt-row .k-grid-row-sticky {
        background-color: #1F1D2B;
    }

    .k-grid .k-grid-content-locked .k-selected td,
    .k-grid .k-grid-content-locked .k-selected .k-table-td {
        background-color: #532f2d;
    }

    .k-grid .k-grid-content-locked .k-selected.k-table-alt-row td,
    .k-grid .k-grid-content-locked .k-selected.k-table-alt-row .k-table-td {
        background-color: #532f2d;
    }

    .k-grid .k-grid-content-locked .k-selected:hover td,
    .k-grid .k-grid-content-locked .k-selected.k-hover td,
    .k-grid .k-grid-content-locked .k-selected:hover .k-table-td,
    .k-grid .k-grid-content-locked .k-selected.k-hover .k-table-td {
        background-color: #532f2d;
    }

    .k-master-row.k-table-row.k-selected td.k-grid-content-sticky,
    .k-master-row.k-table-row.k-selected .k-table-td.k-grid-row-sticky,
    .k-master-row.k-table-row td.k-grid-content-sticky.k-selected,
    .k-master-row.k-table-row .k-table-td.k-grid-content-sticky.k-selected {
        background-color: #532f2d;
    }

    .k-master-row.k-selected.k-table-alt-row td.k-grid-content-sticky,
    .k-master-row.k-selected.k-table-alt-row .k-table-td.k-grid-row-sticky,
    .k-master-row.k-table-alt-row td.k-grid-content-sticky.k-selected,
    .k-master-row.k-table-alt-row .k-table-td.k-grid-content-sticky.k-selected {
        background-color: #532f2d;
    }

    .k-master-row.k-selected:hover td.k-grid-content-sticky,
    .k-master-row.k-selected:hover .k-table-td.k-grid-row-sticky,
    .k-master-row.k-selected.k-hover td.k-grid-content-sticky,
    .k-master-row.k-selected.k-hover .k-table-td.k-grid-row-sticky,
    .k-master-row:hover td.k-grid-content-sticky.k-selected,
    .k-master-row.k-hover td.k-grid-content-sticky.k-selected,
    .k-master-row:hover .k-table-td.k-grid-content-sticky.k-selected,
    .k-master-row.k-hover .k-table-td.k-grid-content-sticky.k-selected {
        background-color: #532f2d;
    }
</style>

@code {
    public class TreeListHierarchicalItem
    {
        public TreeListHierarchicalItem()
        {
            HireDate = DateTime.Now;
        }

        public int? Id { get; set; }
        public string Name { get; set; }
        public int? AgeInYears { get; set; }
        public decimal? GraduateGrade { get; set; }
        public DateTime HireDate { get; set; }

        public List<TreeListHierarchicalItem> Items { get; set; } = new List<TreeListHierarchicalItem>();
    }

    public List<TreeListHierarchicalItem> Data { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Data = new List<TreeListHierarchicalItem>();
        var rand = new Random();

        for (int i = 1; i < 7; i++)
        {
            var item = new TreeListHierarchicalItem()
                {
                    Id = i,
                    Name = "Item " + i.ToString(),
                    AgeInYears = rand.Next(10, 80),
                    HireDate = DateTime.Now.Date.AddDays(rand.Next(-20, 20)),
                    GraduateGrade = i % 4 + 3
                };
            Data.Add(item);

            for (int j = 1; j < 15; j++)
            {
                item.Items.Add(new TreeListHierarchicalItem()
                    {
                        Id = j,
                        Name = $"Item {i}:{j}",
                        AgeInYears = rand.Next(10, 80),
                        HireDate = DateTime.Now.Date.AddDays(rand.Next(-20, 20)),
                        GraduateGrade = i % 4 + 3
                    });
            }
        }

        await base.OnInitializedAsync();
    }
}
